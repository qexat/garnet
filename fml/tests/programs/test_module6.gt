-- Check:
--   status: success

-- TODO: BUGGO: This test occasionally fails to pass, *hopefully*
-- because of HashMap ordering shenanigans.  Investigate.

-- A generic functional map from a key to a value
type Map(@T, @K, @V) = struct
    get: fn(@T, @K) @V,
    set: fn(@T, @K, @V) @T
end

-- Implement Map for a cell type
type Cell(@K, @V) = struct
    key: @K,
    val: @V
end

fn make_cell_map(k @K, v @V) Map(Cell(@K, @V), @K, @V) =
    let module = $Map(Cell(@K, @V), @K, @V) {
        -- I guess we pretend this always succeeds,
        -- since I don't really feel like implementing if's
        .get = fn(t Cell(@K, @V), key @K) @V =
            t$.val
        end,
        -- Just create a new cell with the given key and val
        .set = fn(t Cell(@K, @V), key @K, val @V) Cell(@K, @V) =
            $Cell(@K, @V) {
                .key = key,
                .val = val,
            }
        end
    }
end
