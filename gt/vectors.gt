--- Messing about with vectors, as a way to experiment with structures
--- and such.  Mainly just syntax.

type Vec3 = struct
    x: I32,
    y: I32,
    z: I32,
end

fn add(lhs Vec3, rhs Vec3) Vec3 =
    Vec3 {
        .x = lhs$.x + rhs$.x,
        .y = lhs$.y + rhs$.y,
        .z = lhs$.z + rhs$.z,
    }
end

type Add(T) = struct(T)
    add: fn(T, T) T
end

const AddI32 Add(I32) = Add {
    .add = fn(x I32, y I32) I32 = x + y end,
}
 
--- hm hm generics.
type GVec3(T) = struct(T)
    x: T,
    y: T,
    z: T,
end

fn add(|T| impl Add(T), lhs GVec3(T), rhs GVec3(T)) GVec3(T) =
    GVec3 {
        .x = impl$.add(lhs$.x, rhs$.x),
        .y = impl$.add(lhs$.y, rhs$.y),
        .z = impl$.add(lhs$.z, rhs$.z),
    }
end

fn main() =
    __println(42)
end
