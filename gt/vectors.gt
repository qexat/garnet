--- Messing about with vectors, as a way to experiment with structures
--- and such.  Mainly just syntax.

struct Vec3 =
    x: F32
    y: F32
    z: F32
end

fn add(lhs: Vec3, rhs: Vec3): Vec3 =
    Vec3 {
        x = lhs.x + rhs.x,
        y = lhs.y + rhs.y,
        z = lhs.z + rhs.z,
    }
end

const VecAdd: Add[Vec3] = Add[Vec3] {
    Output = Vec3,
    add = add,
}

fn foo(a: Vec3, b: Vec3): Vec3 =
    -- So all these are equivalent...
    add(a, b)
    a.add(b)
    a + b
    VecAdd.add(a, b)
end


--- hm hm generics.
struct Vec3[T] =
    x: T
    y: T
    z: T
end

fn add(lhs: Vec3[T], rhs: Vec3[T]): Vec3[T]
where T: Add =
    Vec3 {
        x = lhs.x + rhs.x,
        y = lhs.y + rhs.y,
        z = lhs.z + rhs.z,
    }
end
