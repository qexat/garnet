-- Check:
--   status: success

-- A hasher that only accepts basic integers and always returns an
-- integer.  Implements a particular hash algorithm, with optional
-- state in it.
-- Analogous to Rust's std::hash::Hasher
-- We don't have mutation yet, so this just returns a new state.
--
-- No associated types either, so we just make it a type param for now,
-- which surprisingly appears to work.
type Hasher(@Self, @Out) = struct
    write: fn(@Self, I32) @Self,
    finish: fn(@Self) @Out,
end

type DumbHashState = I32


fn main() I32 =
    let dumbhasher Hasher(DumbHashState, I32) = Hasher( {
        .write = fn(s DumbHashState, i I32) DumbHashState = DumbHashState(i) end,
        .finish = fn(s DumbHashState) I32 = 3 end
    })
    let hash_state = DumbHashState(1)
    let updated_state = dumbhasher$.write(hash_state, 12)
    let hash = dumbhasher$.finish(updated_state)
    hash
end
