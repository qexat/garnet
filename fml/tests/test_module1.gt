
-- A hasher that only accepts basic integers and always returns an
-- integer.  Implements a particular hash algorithm, with optional
-- state in it.
-- Analogous to Rust's std::hash::Hasher
-- We don't have mutation yet, so this just returns a new state.
type Hasher(@Self) = struct
    write: fn(@Self, I32): @Self,
    finish: fn(@Self): I32,
end

type DumbHashState = I32


fn main(): I32 =
    let dumbhasher = $Hasher(DumbHashState) {
        .write = fn(s: DumbHashState, i: I32): DumbHashState = $DumbHashState i end,
        .finish = fn(s: DumbHashState): I32 = 3 end
    }
    let hash_state = $DumbHashState 1
    let updated_state = dumbhasher.write(hash_state, 12)
    let hash = dumbhasher.finish(updated_state)
    3
end
